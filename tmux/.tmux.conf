# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 2

## Most compatible setting:
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

set -g mouse on
set -g prefix C-b
setw -g mode-keys vi
set -g status-position top
set -sg escape-time 0
set -wg xterm-keys on
set -sg extended-keys always
set -as terminal-features 'xterm*:extkeys'
set -g allow-passthrough on
set -gq allow-passthrough on
set -g visual-activity off
set -g focus-events on
set-option -g default-shell "/usr/bin/fish"

# dim inactive panes
# set -g window-style 'bg=colour236'
# set -g window-active-style 'bg=color0'

unbind %
bind | split-window -h

unbind '"'
bind - split-window -v

unbind r
bind r source-file ~/.tmux.conf

# easy mistakes
bind C-l last-window
# set mouse on with prefix m
bind m set -g mouse on \; display 'Mouse: ON'
# set mouse off with prefix M
bind M set -g mouse off \; display 'Mouse: OFF'

# {{{ tmux-navigator replacement
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|docker)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                          tmux select-pane -L"
bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                         ($is_fzf && tmux send-keys C-j) || \
                         tmux select-pane -D"
bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                          ($is_fzf && tmux send-keys C-k)  || \
                          tmux select-pane -U"
bind -n C-l run  "($is_vim && tmux send-keys C-l) || \
                          tmux select-pane -R"
bind -n M-` if-shell "$is_vim" 'send-keys M-`'  'select-pane -l'
# navigate in copy mode as well
bind -T copy-mode-vi C-h select-pane -L
bind -T copy-mode-vi C-j select-pane -D
bind -T copy-mode-vi C-k select-pane -U
bind -T copy-mode-vi C-l select-pane -R

bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

bind -r m resize-pane -Z
# quick switch with control + number: replaced with kitty keymap
# bind -n M-1 select-window -t :=1
# bind -n M-2 select-window -t :=2
# bind -n M-3 select-window -t :=3
# bind -n M-4 select-window -t :=4
# bind -n M-5 select-window -t :=5
# bind -n M-6 select-window -t :=6
# bind -n M-7 select-window -t :=7
# bind -n M-8 select-window -t :=8
# bind -n M-9 select-window -t :=9

set-window-option -g automatic-rename off
set-option -g set-titles off

bind O setw synchronize on \; display 'Synchronize on'
bind C-o setw synchronize off \; display 'Synchronize off'
bind C send-keys -R \; clear-history
bind C-c copy-mode
bind C-[ copy-mode
bind Escape run 'true'
bind C-v paste-buffer
bind C-] paste-buffer
bind C-z resize-pane -Z

bind N move-window -r \; display 'Renumbered' # renumber window
bind L move-pane -h -t '.-' # stack the adjacent pane horizontally
bind H move-pane -t '.-' # stack the adjacent pane vertically
bind A move-window -t 0 \; move-window -r

# copy mode
bind Enter copy-mode
bind b list-buffers
bind p paste-buffer
bind P choose-buffer
bind ? list-keys

# word separators for automatic word selection
setw -g word-separators ' @"=()[]'
setw -ag word-separators "'"
setw -g aggressive-resize off

# the following vi-copy bindings follow vim settings
bind -T edit-mode-vi Up send -X history-up
bind -T edit-mode-vi Down send -X history-down
bind -T copy-mode-vi Space send -X begin-selection
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi C-v run "tmux send -X rectangle-toggle; tmux send -X begin-selection"
bind -T copy-mode-vi [ send -X begin-selection
bind -T copy-mode-vi ] send -X copy-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi q send -X clear-selection

# Easy one hand copy & paste
bind -T copy-mode-vi c send -X copy-pipe-and-cancel
bind -T copy-mode-vi C send -X copy-pipe-and-cancel "tmux paste-buffer"
bind -T copy-mode-vi Y send -X copy-pipe-and-cancel "tmux paste-buffer"

# native regex search (copycat replacement)
bind / copy-mode \; send ?
# URL search
bind C-u copy-mode \; send -X search-backward "(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*"

# create session
bind C-c command-prompt -p new-session 'new-session -s %%'

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# session navigation
bind BSpace switch-client -l  # move to last session
bind -n C-q last-window
# }}}

# CTRL-[SHIFT]-Tab is remapped to M-C-n/p in kitty
bind -n M-C-n next-window
bind -n M-C-p previous-window
# bind -n BTab last-window

# https://stackoverflow.com/a/55616731/714179
bind -n Home send Escape "OH"
bind -n End send Escape "OF"

# other useful things learned from https://github.com/gpakosz/.tmux/blob/master/.tmux.conf
# }}}

## if Italics needed, need to use "tmux":
## https://github.com/tmux/tmux/wiki/FAQ#i-dont-see-italics-or-italics-and-reverse-are-the-wrong-way-round
## https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95#the-right-way
# set -g default-terminal "tmux-256color"
## kitty terminfo has it all, but needs terminfo when using ssh
## https://sw.kovidgoyal.net/kitty/faq/#i-get-errors-about-the-terminal-being-unknown-or-opening-the-terminal-failing-when-sshing-into-a-different-computer
set -g default-terminal "xterm-kitty"


# {{{ commands with external dependencies

# share session with gotty
bind-key c-t new-window -n "term readonly shareing" \
    "ttyd -R tmux attach -t `tmux display -p '#S'`" \; \
    split-window -h "ngrok http -bind-tls=true 7681"
# share with write
bind-key T new-window -n "term WRITABLE shareing" \
    "ttyd -c jackieli:Tes9ting tmux attach -t `tmux display -p '#S'`" \; \
    split-window -h "ngrok http 7681"

bind-key c-y run-shell "$HOME/.config/base16-shell-hooks/modify-cursor-color"

# }}}

# {{{ plugin settings

# tmux-yank: https://github.com/tmux-plugins/tmux-yank/blob/master/scripts/helpers.sh#L56
# mouse yank to system clipboard
set -g @yank_selection_mouse 'clipboard' # or 'primary' or 'secondary'
set -g @yank_action 'copy-pipe-and-cancel'

# override tmux-yank's default mouse yank: if copy-commande use
# copy-pipe-and-cancel, it'll drag and copy:
# https://github.com/tmux-plugins/tmux-yank/blob/master/yank.tmux#L51 We want
# to be able to drag again to reselect and copy -b to put in background; -d 1
# to delay 1 second
# TODO: new version of tmux use set -s copy-command 'pbcopy'
run -b -d 1 'tmux bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-no-clear'

# search engine google
set -g @open-S 'https://www.google.com/search?q='

set -g @extrakto_fzf_tool $HOME/.fzf/bin/fzf
# display "$HOME/.fzf/bin/fzf $FZF_DEFAULT_OPTS"
set -g @extrakto_grab_area 'window full'
set -g @extrakto_split_size "15"
# set -g @extrakto_clip_tool "xsel --input --clipboard" # works better for nvim
set -g @extrakto_copy_key "tab"
set -g @extrakto_insert_key "enter"

set -g @jump-key 'j'

# set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-processes 'false'
set -g @resurrect-save 'S'

set -g @emulate-scroll-for-no-mouse-alternate-buffer on

# set -g @named-snapshot-save 'C-m:main,M-n:other'
# set -g @named-snapshot-restore 'M:main,N:other'
# }}}

# {{{ List of plugins
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# set -g @plugin 'rose-pine/tmux'
     

# ...alongside
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'christoomey/vim-tmux-navigator' # using our own binding above
set -g @plugin 'tmux-plugins/tmux-open' # for open search or file
# set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank' # set up many yank commands
# set -g @plugin 'jackielii/extrakto'
set -g @plugin 'laktak/extrakto' # select word from screen
#set -g @plugin 'Morantron/tmux-fingers' # <prefix> F
set -g @plugin 'schasse/tmux-jump' # <prefix> [j]ump
set -g @plugin 'tmux-plugins/tmux-resurrect' # <prefix> <c-s>/<c-r> to save/restore
set -g @plugin 'nhdaly/tmux-better-mouse-mode' # for scrolling in less
# set -g @plugin 'spywhere/tmux-named-snapshot' # restore named sessions

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#
#
#
#
#
#
set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'

set-option -g allow-passthrough on
set -g @rose_pine_variant 'main' # Options are 'main', 'moon' or 'dawn'

# ########rose-pine############################3{{{
# set -g @rose_pine_host 'on' # enables hostname in the status bar
# set -g @rose_pine_date_time '' # it accepts the date unix command format (man date for info)
# set -g @rose_pine_user 'on' # turn on the username component in the statusbar
# set -g @rose_pine_directory 'on' # turn on the current folder component in the status bar
# set -g @rose_pine_bar_bg_disable 'on' # disables background color, for transparent terminal emulators
# # if @rose_pine_bar_bg_disable is set to 'on', uses the provided value to set the background color
# # it can be any of the on tmux (named colors, 256-color set, `default` or hex colors)
# # see more on http://man.openbsd.org/openbsd-current/man1/tmux.1#styles
# set -g @rose_pine_bar_bg_disabled_color_option 'default'
#
# # set -g @rose_pine_only_windows 'on' # leaves only the window module, for max focus and space
# # set -g @rose_pine_disable_active_window_menu 'on' # disables the menu that shows the active window on the left
#
# # set -g @rose_pine_default_window_behavior 'on' # forces tmux default window list behaviour
# # set -g @rose_pine_show_current_program 'on' # forces tmux to show the current running program as window name
# # set -g @rose_pine_show_pane_directory 'on' # forces tmux to show the current directory as window name
# # previously set -g @rose_pine_window_tabs_enabled
#
# # example values for these can be:
# set -g @rose_pine_left_separator ' > ' # the strings to use as separators are 1-space padded
# set -g @rose_pine_right_separator ' < ' # accepts both normal chars & nerdfont icons
# set -g @rose_pine_field_separator ' | ' # again, 1-space padding, it updates with prefix + i
# set -g @rose_pine_window_separator ' - ' # replaces the default `:` between the window number and name
#
# # these are not padded
# set -g @rose_pine_session_icon '' # changes the default icon to the left of the session name
# set -g @rose_pine_current_window_icon '' # changes the default icon to the left of the active window name
# set -g @rose_pine_folder_icon '' # changes the default icon to the left of the current directory folder
# set -g @rose_pine_username_icon '' # changes the default icon to the right of the hostname
# set -g @rose_pine_hostname_icon '󰒋' # changes the default icon to the right of the hostname
# set -g @rose_pine_date_time_icon '󰃰' # changes the default icon to the right of the date module
# set -g @rose_pine_window_status_separator "  " # changes the default icon that appears between window names
#
# # very beta and specific opt-in settings, tested on v3.2a, look at issue #10
# # set -g @rose_pine_prioritize_windows 'on' # disables the right side functionality in a certain window count / terminal width
# # set -g @rose_pine_width_to_hide '80' # specify a terminal width to toggle off most of the right side functionality
# # set -g @rose_pine_window_count '5' # specify a number of windows, if there are more than the number, do the same as width_to_hide
# #######################################}}}


# ###################catppuccin#######################
# set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator " "
# set -g @catppuccin_window_middle_separator " █"
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
# set -g @catppuccin_status_modules_right "directory meetings date_time"
# set -g @catppuccin_status_modules_left "session"
# set -g @catppuccin_status_left_separator  " "
# set -g @catppuccin_status_right_separator " "
# set -g @catppuccin_status_right_separator_inverse "no"
# set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "no"
# set -g @catppuccin_directory_text "#{b:pane_current_path}"
# set -g @catppuccin_meetings_text "#($HOME/.config/tmux/scripts/cal.sh)"
# set -g @catppuccin_date_time_text "%H:%M"
#
# TMUX Theme (uncomment section for whichever theme you prefer or use your own)
# TMUX Power Theme
set -g @plugin 'wfxr/tmux-power'
set -g @tmux_power_theme 'gold' # gold, everforest, moon, coral, snow, forest, violet, redwine, #HEXCODE
set -g @tmux_power_date_format '%m/%d/%Y'
set -g @tmux_power_time_format '%-I:%M %p'
set -g @tmux_power_date_icon ' ' # set it to a blank will disable the icon
set -g @tmux_power_time_icon ' ' # set it to a blank will disable the icon

# Tokyo Night Theme
# set -g @plugin 'fabioluciano/tmux-tokyo-night'
# set -g @theme_variation 'night' # storm, night, moon, day
# set -g @theme_plugin_datetime_format '%m/%d/%Y  %-I:%M %p'

# Catppuccin Theme
# set -g @plugin 'catppuccin/tmux'
# set -g @catppuccin_flavour 'mocha' # latte, frappe, macchiato, mocha
# set -g @catppuccin_window_number_position "none"
# set -g @catppuccin_status_modules_left "session application"
# set -g @catppuccin_status_modules_right "date_time"
# set -g @catppuccin_status_left_separator  ""
# set -g @catppuccin_status_right_separator ""
# set -g @catppuccin_status_right_separIator_inverse "no"
# set -g @catppuccin_status_fill "all"
# set -g @catppuccin_status_connect_separator "no"
# set -g @catppuccin_date_time_text "%m/%d/%Y  %-I:%M %p"
# ###################################################
set -g @sessionx-bind 'o'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '75%'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-filter-current 'false'
set -g @sessionx-preview-enabled 'true'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'

run -b '~/.tmux/plugins/tpm/tpm'
